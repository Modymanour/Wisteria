// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Wisteria.Domain.Entities;

#nullable disable

namespace Wisteria.Migrations
{
    [DbContext(typeof(UserBase))]
    [Migration("20250421225207_TazbeetRelationshipUserCommunities")]
    partial class TazbeetRelationshipUserCommunities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommunitiesUser", b =>
                {
                    b.Property<int>("CommunitiesCommunity_Id")
                        .HasColumnType("int");

                    b.Property<int>("Community_MembersUser_ID")
                        .HasColumnType("int");

                    b.HasKey("CommunitiesCommunity_Id", "Community_MembersUser_ID");

                    b.HasIndex("Community_MembersUser_ID");

                    b.ToTable("CommunitiesUser");
                });

            modelBuilder.Entity("Wisteria.Domain.Entities.Comments", b =>
                {
                    b.Property<int>("comment_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("comment_Id"));

                    b.Property<int?>("User_ID")
                        .HasColumnType("int");

                    b.Property<string>("comment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("comment_Id");

                    b.HasIndex("User_ID");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Wisteria.Domain.Entities.Communities", b =>
                {
                    b.Property<int>("Community_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Community_Id"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Community_Id");

                    b.ToTable("Communities");
                });

            modelBuilder.Entity("Wisteria.Domain.Entities.Notifications", b =>
                {
                    b.Property<int>("Notif_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Notif_ID"));

                    b.Property<int?>("User_ID")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Notif_ID");

                    b.HasIndex("User_ID");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("Wisteria.Domain.Entities.User", b =>
                {
                    b.Property<int>("User_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("User_ID"));

                    b.Property<string>("Bio")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("User_ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CommunitiesUser", b =>
                {
                    b.HasOne("Wisteria.Domain.Entities.Communities", null)
                        .WithMany()
                        .HasForeignKey("CommunitiesCommunity_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Wisteria.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("Community_MembersUser_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Wisteria.Domain.Entities.Comments", b =>
                {
                    b.HasOne("Wisteria.Domain.Entities.User", null)
                        .WithMany("User_Comments")
                        .HasForeignKey("User_ID");
                });

            modelBuilder.Entity("Wisteria.Domain.Entities.Notifications", b =>
                {
                    b.HasOne("Wisteria.Domain.Entities.User", null)
                        .WithMany("Notif")
                        .HasForeignKey("User_ID");
                });

            modelBuilder.Entity("Wisteria.Domain.Entities.User", b =>
                {
                    b.Navigation("Notif");

                    b.Navigation("User_Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
